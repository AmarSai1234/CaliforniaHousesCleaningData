---
title: "athota_hw3"
format: pdf
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

## Problem 1: Loading and cleaning (25 points)

a.  Load the data into a dataframe called `ca_pa`. (Hint: one way is to use `read.csv()`.)

```{r}
#collabarated with Omkar kulkarni
library(tidyverse)
library(dplyr)
ca_pa = read.csv("calif_penn_2011.csv")#reads the data
```

b.  How many rows and columns does the dataframe have?

```{r}
ncol(ca_pa)#outputs number of columns for the dataframe
nrow(ca_pa)#ouytputs number of rows for the dataframe
```

c.  Run this command, and explain, in words, what it does:

```{r, eval = FALSE}
colSums(is.na(ca_pa))#gives the sum of each columns without null values
```

d.  Remove any row containing an NA value. There are many ways to do this; one possibility is using the function `na.omit()`, which takes a dataframe and returns a new dataframe, omitting any row containing an NA value. You may also use `dplyr` operations.

```{r}
new_ca_pa <- na.omit(ca_pa)#creates new dataframe without null values
```

e.  How many rows did (d) eliminate?

```{r}
nrow(ca_pa)-nrow(new_ca_pa)#outputs the nuumber of rows elimanated by substracting
```

## Problem 2: This Very New House (25 points)

a.  The variable `Built_2005_or_later` indicates the percentage of houses in each Census tract built since 2005. Plot `Median_house_value` against this variable (`Median_house_value` should be on the y-axis). Is there overplotting? How can you improve on this scatterplot? Produce this plot.

```{r}
new_ca_pa %>% 
  ggplot(mapping = aes(x = Built_2005_or_later, y = Median_house_value)) +
  geom_point(alpha = 0.1)
```

```{r}
new_ca_pa %>% 
  ggplot(mapping = aes(x = Built_2005_or_later, y = Median_house_value))+
  geom_hex()
```

b.  Make a new plot, or pair of plots, which breaks the plot in (a) out by state (use your improved version of the scatterplot), for just California and Pennsylvania. Note that the state is recorded in the `STATEFP` variable, with California being state 6 and Pennsylvania state 42. What do you learn from this figure? Is there a difference between the two states?

```{r}
new_ca_pa |>
  ggplot(mapping = aes(x = Built_2005_or_later, y = Median_house_value)) +
  geom_hex() +
  facet_wrap(~STATEFP)
```

c.  What is the median percentage of houses built in 2005 or later (in the entire data set, i.e., California and Pennsylvania)? Create a new binary variable for whether the Census tract has percentage greater or less than this median. Make a visualization for the median house prices, broken down by this new variable. What do you learn from this figure?

```{r}
median_price <- median(new_ca_pa$Median_house_value)
print(median_price)

new_ca_pa$higher_than_median <- if_else(new_ca_pa$Median_house_value > median_price, "Higher", "Lower")
head(new_ca_pa)

new_ca_pa |>
  ggplot(mapping = aes(x = Median_house_value, fill = higher_than_median)) + 
  geom_histogram(binwidth = 100000) +
  facet_wrap(~higher_than_median)
```

## Problem 3: Nobody Home (25 points)

The vacancy rate is the fraction of housing units which are not occupied. The dataframe contains columns giving the total number of housing units for each Census tract, and the number of vacant housing units.

a.  Add a new column to the dataframe which contains the vacancy rate. What is mean vacancy rate?

```{r}
new_ca_pa<- new_ca_pa |>
  mutate(vacancy_rate = Vacant_units / Total_units)

mean(new_ca_pa$vacancy_rate)
```

b.  What is the standard deviation? Calculate this using just basic arithmetic operations (`+` or `sum()`, `-`, ...) and `length()`, then use the `sd()` function to make sure that you get the same result.

```{r}
sqrt(sum((new_ca_pa$vacancy_rate - mean(new_ca_pa$vacancy_rate))^2) / (nrow(new_ca_pa) - 1)) == sd(new_ca_pa$vacancy_rate)
```

## Problem 4: County Investigation (25 points)

The column `COUNTYFP` contains a numerical code for counties within each state.

a.  We are interested in San Francisco County (county 75 in California), Yolo (county 113 in California), and Allegheny County (county 3 in Pennsylvania). Create a new data frame with just the relevant rows. What is the median home value in Yolo county?

```{r}
county_new_ca <- new_ca_pa |>
  filter((STATEFP == 6 & COUNTYFP == 75) | 
         (STATEFP == 6 & COUNTYFP == 113) | 
          STATEFP == 42 & COUNTYFP == 3)

county_new_ca %>% 
  filter(county_new_ca$COUNTYFP == 113) %>% 
  summarize(median_yolo_county = median(Median_house_value))
```

b.  For San Francisco, Yolo and Allegheny Counties, what were the average percentages of housing built since 2005?

```{r}
county_new_ca |> 
  group_by(COUNTYFP) |>
    summarize(avg_percentages_housing2005 = mean(Built_2005_or_later))
#outputs the average percentages of housing built since 2005 in each county.

```

c.  What is the (Pearson) correlation coefficient between median house value and the median household income in (i) the whole data, (ii) all of California, (iii) all of Pennsylvania, (iv) San Francisco County? First make scatterplots and guess, then compute these in R. What do you learn about the relationship between median house values and median household income?
d.  

```{r}
new_ca_pa |>
  ggplot(mapping = aes(x = Median_house_value, y = Median_household_income)) +
  geom_point(alpha = 0.5)
#I am guessing 0.7

cor(new_ca_pa$Median_house_value, new_ca_pa$Median_household_income)
```

ii. 

```{r}
new_ca <- new_ca_pa |>
  filter(STATEFP == 6)

ggplot(data = new_ca, mapping = aes(x = Median_house_value, y = Median_household_income)) +
geom_point(alpha = 0.5)

#I am gonna guess 0.67
cor(new_ca$Median_house_value, new_ca$Median_household_income)
```

iii

```{r}
new_pa <- new_ca_pa |>
  filter(STATEFP == 42)

ggplot(data = new_pa, mapping = aes(x = Median_house_value, y = Median_household_income)) +
geom_point(alpha = 0.5)
#I am guessing 0.75
cor(new_pa$Median_house_value, new_pa$Median_household_income)
```

iv. 

```{r}
new_sfc <-new_ca_pa |>
  filter(STATEFP == 6 & COUNTYFP == 75)

ggplot(data = new_sfc, mapping = aes(x = Median_house_value, y = Median_household_income)) +
geom_point(alpha = 1)
# I am guessing 0.4

cor(new_sfc$Median_house_value, new_sfc$Median_household_income)
```

## Appendix

```{r eval = TRUE}
sessionInfo()
```
